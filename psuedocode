//standart init loop
function init(){
    set what_button = B1 register
    set char1press = B2 register 
    set char1 = B3 register 
    set char2 = B4 register 
    set temp = B5 register

    select memory bank 1
    configure output/input pins for PORTA & PORTB
    select memory bank 0
    let what_button = 0
    let PORTA = 0x00000000
}


function main(){
    check_key()
    display_key()
}

function check_key(){
    for (i in range 0,2) {
        for (j in range 3,5) {
            set PORTA,i high
            if (PORTA,j==high){
                if (chapress == d'0'){
                    set chapress =1
                    move (i*3)+j to the working register
                    move the working register to char1
                }
                else{
                    move (i*3)+j to the working register
                    move the working register to char2
                }
                
            }
            set PORTA,i low
        }
    }
    // if '-' symbol pressed
    if (PORTA,6==high){
        move 11 to the working register
    }
    // if '-' symbol pressed
    if (PORTA,7==high){
        move 12 to the working register
    }
    if (PORTA,8==high){
        clear()
    }
    if (PORTB,1==high){
        calculate()
    }
}

function display_key(){
    if(woring register==11) or (woring register==12){
        if(woring register==11){
            mov 'binary out number for +' to PORTB
        }
        if(woring register==12){
            mov 'binary out number for -' to PORTB
        }
    }
    else{
        for (z in range(0,9)){
            if (working register ==2){
                move 'binary out number for working number reg' 
            }
        }
    }
}

function clear(){
    clear all registers
    run init() //as the program runs in a linear fashion the it will return to main after completing the init function
}

function display_res(){
    mov result to the working register
    convert the working resiter to number for LEDs
    mov new result to PORTB
    mov 'binary out number for +' to PORTB
    mov 'binary out number for -' to PORTB
}

function calculate(){
    result = char1+char2
    display_res()
}
